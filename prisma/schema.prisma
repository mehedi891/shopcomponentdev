// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Component {
  id                    Int     @id @default(autoincrement())
  title                 String
  description           String?
  appliesTo             String  @default("product") // e.g. 'product'
  addToCartType         Json
  enableQtyField        Boolean @default(false)
  layout                String  @default("grid")
  status                String  @default("deactived")
  componentSettings     Json?
  shoppingCartSettings  Json?
  productLayoutSettings Json?
  buttonStyleSettings   Json?
  tracking              String?
  customerTracking      String?
  compHtml              String
  shopId                Int
  shop                  Shop    @relation(fields: [shopId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Shop {
  id                  Int         @id @default(autoincrement())
  shopifyShopGid      String?      @unique
  shopifyDomain       String      @unique
  scAccessToken       String?
  headlessAccessToken String?
  installationCount   Int?
  components          Component[]
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
}
