// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum APPLIES_TO {
  product
  collection
}

enum LAYOUT {
  grid
  list
  gridSlider
}

enum STATUS {
  actived
  deactived
}

enum PLAN_TYPE {
  monthly
  yearly
}

enum PLAN_NAME {
  Free
  Growth
}

enum PLAN_STATUS {
  ACTIVE
  CANCELLED
  DECLINED
  EXPIRED
  FROZEN
  PENDING
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Component {
  id                    Int        @id @default(autoincrement())
  title                 String
  description           String?
  appliesTo             String     @default("product")
  addToCartType         Json
  enableQtyField        Boolean    @default(false)
  layout                String     @default("grid")
  status                String     @default("deactived")
  componentSettings     Json?
  shoppingCartSettings  Json?
  productLayoutSettings Json?
  buttonStyleSettings   Json?
  tracking              String?    @unique
  customerTracking      String?
  compHtml              String?    @default("empty")
  shopId                Int
  softDelete            Boolean    @default(false)
  shop                  Shop       @relation(fields: [shopId], references: [id])
  orders                Order[]
  affiliate             Affiliate?
  totalOrderCount       Int?       @default(0)
  totalOrderValue       Float?     @default(0.00)
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
}

model Shop {
  id                   Int         @id @default(autoincrement())
  shopifyShopGid       String?     @unique
  shopifyDomain        String?     @unique
  scAccessToken        String?
  headlessAccessToken  String?
  installationCount    Int?
  maxAllowedComponents Int?        @default(1)
  name                 String?
  url                  String?
  isFirstInstall       Boolean?    @default(true)
  partnerDevelopment   Boolean?    @default(true)
  shopOwnerName        String?
  email                String?
  shopOwnerPhone       String?
  currencyCode         String?
  weightUnit           String?
  billingAddress       String?
  shopifyPlan          String?
  appPlan              String?     @default("Free")
  trialDays            Int?        @default(5)
  planActivatedAt      DateTime?   @default(now())
  shopifyPlus          Boolean?    @default(false)
  myshopifyDomain      String?
  appDisabled          Boolean?    @default(false)
  appCatalogId         String?
  publicationId        String?
  isInstalled          Boolean?    @default(false)
  coupon               String?
  isAppliedCoupon      Boolean?    @default(true)
  plan                 Plan?
  components           Component[]
  affiliates           Affiliate[]
  orders               Order[]
  totalOrderCount      Int?        @default(0)
  totalOrderValue      Float?      @default(0.00)
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
}

model Plan {
  id           Int      @id @default(autoincrement())
  planId       String?  @unique
  planName     String?
  price        Float?   @default(0.00)
  planType     String?
  chargeId     String?
  isTestCharge Boolean? @default(true)
  planStatus   String?  @default("deactived")
  shopId       Int      @unique
  shop         Shop     @relation(fields: [shopId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Order {
  id          Int       @id @default(autoincrement())
  orderId     String    @unique
  orderObj    String?   @db.Text
  shopId      Int
  componentId Int
  component   Component @relation(fields: [componentId], references: [id])
  shop        Shop      @relation(fields: [shopId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Affiliate {
  id                  Int        @id @default(autoincrement())
  name                String?    @default("SPC_affiliate")
  affTrackingCode     String?    @unique @default("SPC_affiliate_tracking")
  url                 String?
  email               String?
  description         String?
  paypalId            String?
  comissionPercentage Float?     @default(0.00)
  comissionAmount     Float?     @default(0.00)
  componentId         Int?       @unique
  shopId              Int        @unique
  components          Component? @relation(fields: [componentId], references: [id])
  shop                Shop       @relation(fields: [shopId], references: [id])
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
}

model App {
  id              Int      @id @default(autoincrement())
  totalOrderCount Int?     @default(0)
  totalOrderValue Float?   @default(0.00)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
